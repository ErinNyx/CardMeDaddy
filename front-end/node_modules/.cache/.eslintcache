[{"/home/erin/WebstormProjects/CardMe/front-end/src/index.js":"1","/home/erin/WebstormProjects/CardMe/front-end/src/App.js":"2","/home/erin/WebstormProjects/CardMe/front-end/src/reportWebVitals.js":"3","/home/erin/WebstormProjects/CardMe/front-end/src/components/Homepage/index.js":"4","/home/erin/WebstormProjects/CardMe/front-end/src/components/Navbar/index.js":"5","/home/erin/WebstormProjects/CardMe/front-end/src/components/Create Game/index.js":"6","/home/erin/WebstormProjects/CardMe/front-end/src/components/Game/index.js":"7","/home/erin/WebstormProjects/CardMe/front-end/src/components/Modal/index.js":"8","/home/erin/WebstormProjects/CardMe/front-end/src/components/Join Game/index.js":"9"},{"size":677,"mtime":1679371023836,"results":"10","hashOfConfig":"11"},{"size":1363,"mtime":1679371755058,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1678143955839,"results":"13","hashOfConfig":"11"},{"size":991,"mtime":1679371169833,"results":"14","hashOfConfig":"11"},{"size":2085,"mtime":1679371169845,"results":"15","hashOfConfig":"11"},{"size":6572,"mtime":1679423243364,"results":"16","hashOfConfig":"11"},{"size":11153,"mtime":1679446531163,"results":"17","hashOfConfig":"11"},{"size":527,"mtime":1679321863196,"results":"18","hashOfConfig":"11"},{"size":2125,"mtime":1679371169853,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qknta8",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/erin/WebstormProjects/CardMe/front-end/src/index.js",[],[],"/home/erin/WebstormProjects/CardMe/front-end/src/App.js",[],[],"/home/erin/WebstormProjects/CardMe/front-end/src/reportWebVitals.js",[],[],"/home/erin/WebstormProjects/CardMe/front-end/src/components/Homepage/index.js",[],[],"/home/erin/WebstormProjects/CardMe/front-end/src/components/Navbar/index.js",["50","51"],[],"import './index.scss';\nimport {Link, NavLink, useNavigate} from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\nconst socket = io();\nsocket.on('alert', (msg) => {\n    alert(msg);\n});\n\n\nconst Navbar = () => {\n\n    const [username, setUsername] = useState('Change Name');\n\n    useEffect( () => {\n        (async () => {\n            localStorage.setItem('loading', true);\n            const getData = await fetch('/api/get-data', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: localStorage.getItem('id')\n                })\n            }).then((res) => res.json());\n\n            localStorage.setItem('id', getData.id);\n\n            socket.emit('online', {\n                username: getData.username,\n                id: getData.id\n            });\n            localStorage.setItem('loading', false);\n            window.dispatchEvent(new Event('storage'));\n            setUsername(getData.username);\n        })();\n    }, []);\n\n    return (\n        <section id={'nav'}>\n            <NavLink to={'/'} id={'logo'}>\n                Card Me Daddy\n            </NavLink>\n            <NavLink to={'https://ko-fi.com/erinargo'} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-coffee\" id={ 'coffee' } aria-hidden=\"true\" /></NavLink>\n\n            <form className={'change-name'} onSubmit={ (e) => {\n                e.preventDefault();\n                const username = document.getElementById('username').value;\n                if(!username) return;\n\n                setUsername(username);\n                socket.emit('change-username', { id: localStorage.getItem('id'), username });\n                document.getElementById('username').value = '';\n            }}>\n                <input type={'text'} placeholder={ username } id={ 'username' } />\n                <input type={'submit'} value={'Change Name'}/>\n            </form>\n        </section>\n    );\n};\n\nexport default Navbar;","/home/erin/WebstormProjects/CardMe/front-end/src/components/Create Game/index.js",["52","53","54","55","56","57","58"],[],"import './index.scss';\nimport Navbar from '../Navbar';\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nvar calls = 0, responses = 0;\n\nconst socket = io();\nsocket.on('alert', (msg) => {\n    alert(msg);\n});\n\nsocket.on('cards', (data) => {\n    calls = data.calls;\n    responses = data.responses;\n});\n\nsocket.on('redirect', (link) => {\n    window.location.href = link;\n});\n\nconst Create = () => {\n    document.addEventListener('keyup', (e) => {\n        e.preventDefault();\n        if (e.key === 'ENTER') crHandler(e);\n    });\n\n    const init = (\n        <div>\n            Loading . . .\n        </div>\n    );\n\n    const modalInit = (\n        <></>\n    );\n\n    const crInit = (\n        <>\n            <title>Card Me Daddy | Create a Game</title>\n            <form className={'settings'} onSubmit={(e) => e.preventDefault()}>\n                <label name={ 'blank' }><input type={ 'checkbox' }/>Add Blank Cards?</label>\n                <label name={ 'rounds' }>Enter number of rounds: <input type={'number'} placeholder={'10'} /></label>\n                <label name={ 'max-players' }>Enter Max number of Players: <input type={'number'} placeholder={'5'} /></label>\n            </form>\n            <a className={ 'cr-add' }>\n                <input type={ 'text' } placeholder={'Custom CR Cast decks can be added with the deck code'} id={ 'cr-cast-input' } />\n                <input type={'submit'} onClick={ (e) => crHandler(e) } value={ 'Add CR Cast Deck' } id={ 'cr-cast-submit' } />\n            </a>\n            <h3>Added CR Packs</h3>\n        </>\n    );\n\n    const [packs, setPacks] = useState(init);\n    let [crPacks, setCR] = useState(crInit);\n\n    let [modal, setModal] = useState(modalInit);\n\n    async function crHandler(e) {\n        e.preventDefault();\n        var id = document.getElementById('cr-cast-input').value;\n        if(!id) return alert('Please enter a CR Cast ID');\n\n        const pack = await fetch('/api/cr-cast', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                deck: id\n            })\n        }).then((res) => res.json());\n\n        if(pack.error > 1) return alert('Invalid pack, please check that you entered the right code.');\n\n        const packID = ( <label className={ 'pack-container' }>\n            <input type={ 'checkbox' } className={'cr'} value={ id } onLoad={(e) => e.target.checked = true} /> { pack.name }: { pack.description } </label>);\n        const add = (\n            <>\n                { crPacks }\n                { packID }\n            </>\n        );\n\n        crPacks = add;\n\n        setCR(add);\n    }\n\n    useEffect(() => {\n        (async () => {\n            const getPacks = await fetch('https://www.restagainsthumanity.com/api/v2/packs', {\n                method: 'GET'\n            }).then((res) => res.json());\n\n            setPacks(\n                (\n                    <div className={ 'column-wrapper' }>\n                        <p id={ 'pre-title' }>Premade Packs</p>\n                        <div id={ 'base-packs' }>\n                            { getPacks.map((p) => (\n                                    <label className={ 'pack-container' }>\n                                        <input type={ 'checkbox' } className={'cah'} value={ p.split(\" \").join(\"%20\").trim() } />\n                                        { p }\n                                    </label>\n                                )\n                            )}\n                        </div>\n                    </div>\n                )\n            );\n        })();\n    });\n\n    return (\n        <>\n            <Navbar />\n\n            <div className={ 'main' }>\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\n                <form id={ 'game-create' }>\n                    <div className={ 'row-wrapper' }>\n                        { packs }\n                        <div className={ 'column-wrapper' } id={ 'cr-cast-div' }>\n                            <h1> CR Cast <i className={ 'fa fa-question-circle' }>\n                                <p className={ 'hide-tip' }>CR Cast is a custom deck builder for cards against humanity. To import your deck, please copy the deck code (the url will not work) and\n                                paste into the field. <NavLink to={'https://cast.clrtd.com/'}>Visit CR Cast to make your deck today!</NavLink></p>\n                            </i></h1>\n                            { crPacks }\n                        </div>\n                    </div>\n\n                    <div id={ 'create-game-top' }>\n                        <input type={'text'} placeholder={ 'Password, if left blank game will be public' } id={ 'pass' } />\n                        <input type={ 'submit' } value={ 'Start Game!' } onClick={ async (e) => {\n                            e.preventDefault();\n\n                            let accept = window.confirm('Are you sure you want to continue with these settings? You can\\'t go back and change them.');\n\n                            if(!accept) return;\n\n                            const cah = [], cr =[], settings = [], password = document.getElementById('pass').value\n                                ? document.getElementById('pass').value : false;\n                            let set = document.querySelectorAll('.settings label input');\n\n                            settings.push(set[0].checked);\n                            settings.push(set[1].value);\n                            settings.push(set[2].value);\n\n                            document.querySelectorAll('.cah').forEach((d) => {\n                                if(d.checked == true) cah.push(d.value);\n                            });\n\n                            document.querySelectorAll('.cr').forEach((d) => {\n                                if(d.checked == true) cr.push(d.value);\n                            });\n\n                            socket.emit('start-game',\n                                {\n                                    id: localStorage.getItem('id'),\n                                    cah,\n                                    cr,\n                                    settings,\n                                    password\n                                })\n                        }\n                        } />\n                    </div>\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default Create;","/home/erin/WebstormProjects/CardMe/front-end/src/components/Game/index.js",["59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76"],[],"/home/erin/WebstormProjects/CardMe/front-end/src/components/Modal/index.js",["77","78","79"],[],"import './index.scss';\n\nvar text;\nconst Modal = ({ data }) => {\n    return (\n        <div className={ 'modal-bg' }>\n            <div className={ 'modal' }>\n                <p> { data } </p>\n                <span>\n                    <a onClick={ () => {\n                        return true;\n                    } }>Okay</a>\n                    <a onClick={ () => {\n                        return false;\n                    } }>Cancel</a>\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;","/home/erin/WebstormProjects/CardMe/front-end/src/components/Join Game/index.js",[],[],{"ruleId":"80","severity":1,"message":"81","line":2,"column":9,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":2,"column":24,"nodeType":"82","messageId":"83","endLine":2,"endColumn":35},{"ruleId":"80","severity":1,"message":"85","line":7,"column":5,"nodeType":"82","messageId":"83","endLine":7,"endColumn":10},{"ruleId":"80","severity":1,"message":"86","line":7,"column":16,"nodeType":"82","messageId":"83","endLine":7,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":47,"column":13,"nodeType":"89","endLine":47,"endColumn":39},{"ruleId":"80","severity":1,"message":"90","line":58,"column":10,"nodeType":"82","messageId":"83","endLine":58,"endColumn":15},{"ruleId":"80","severity":1,"message":"91","line":58,"column":17,"nodeType":"82","messageId":"83","endLine":58,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":153,"column":46,"nodeType":"94","messageId":"95","endLine":153,"endColumn":48},{"ruleId":"92","severity":1,"message":"93","line":157,"column":46,"nodeType":"94","messageId":"95","endLine":157,"endColumn":48},{"ruleId":"80","severity":1,"message":"96","line":4,"column":30,"nodeType":"82","messageId":"83","endLine":4,"endColumn":36},{"ruleId":"80","severity":1,"message":"97","line":5,"column":9,"nodeType":"82","messageId":"83","endLine":5,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":68,"column":36,"nodeType":"94","messageId":"95","endLine":68,"endColumn":38},{"ruleId":"87","severity":1,"message":"88","line":78,"column":50,"nodeType":"89","endLine":78,"endColumn":73},{"ruleId":"92","severity":1,"message":"93","line":79,"column":37,"nodeType":"94","messageId":"95","endLine":79,"endColumn":39},{"ruleId":"87","severity":1,"message":"88","line":79,"column":48,"nodeType":"89","endLine":83,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":83,"column":46,"nodeType":"89","endLine":87,"endColumn":29},{"ruleId":"98","severity":1,"message":"99","line":88,"column":51,"nodeType":"100","messageId":"101","endLine":88,"endColumn":75},{"ruleId":"87","severity":1,"message":"88","line":91,"column":25,"nodeType":"89","endLine":126,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":94,"column":42,"nodeType":"94","messageId":"95","endLine":94,"endColumn":44},{"ruleId":"92","severity":1,"message":"93","line":100,"column":56,"nodeType":"94","messageId":"95","endLine":100,"endColumn":58},{"ruleId":"92","severity":1,"message":"93","line":101,"column":48,"nodeType":"94","messageId":"95","endLine":101,"endColumn":50},{"ruleId":"92","severity":1,"message":"93","line":103,"column":48,"nodeType":"94","messageId":"95","endLine":103,"endColumn":50},{"ruleId":"92","severity":1,"message":"93","line":109,"column":58,"nodeType":"94","messageId":"95","endLine":109,"endColumn":60},{"ruleId":"92","severity":1,"message":"93","line":156,"column":42,"nodeType":"94","messageId":"95","endLine":156,"endColumn":44},{"ruleId":"92","severity":1,"message":"93","line":189,"column":83,"nodeType":"94","messageId":"95","endLine":189,"endColumn":85},{"ruleId":"92","severity":1,"message":"93","line":207,"column":73,"nodeType":"94","messageId":"95","endLine":207,"endColumn":75},{"ruleId":"87","severity":1,"message":"88","line":207,"column":83,"nodeType":"89","endLine":207,"endColumn":151},{"ruleId":"80","severity":1,"message":"102","line":3,"column":5,"nodeType":"82","messageId":"83","endLine":3,"endColumn":9},{"ruleId":"87","severity":1,"message":"88","line":10,"column":21,"nodeType":"89","endLine":12,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":13,"column":21,"nodeType":"89","endLine":15,"endColumn":25},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'calls' is assigned a value but never used.","'responses' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'NavLink' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'text' is defined but never used."]